include mixin_ratingtocolor.pug

include function_calcCoeficient.pug

mixin Rating(friendsOnly, suggestion, ownUser)
    - var coeficient = 0;
    - var defaultCoeficient = 2.5;
    - var sum = defaultCoeficient;
    - var rating = defaultCoeficient*5;
    - for (var id in suggestion.userRating){
        if (suggestion.userRating.hasOwnProperty(id))
            //p 
            //p
            //p OwnID: #{ownUser._id} , ID: #{id}
            //| Name: #{infosys.usernames[id]} , rating: #{suggestion.userRating[id]} , Coeficient:
            - coeficient = 0;
            if (ownUser.correlation[id] && (friendsOnly && ownUser.friendlist.indexOf(id) > -1 || !friendsOnly) ) 
                if ( ownUser.correlation[id][suggestion.category] && ownUser.correlation[id][suggestion.category].ratingSum )
                    //- coeficient = Number((ownUser.correlation[id][suggestion.category].ratingSum + 5) /(ownUser.correlation[id][suggestion.category].ratingCount + 1))
                    //| Normal Coeficient: #{coeficient}
                    - coeficient = CalcCoeficient(ownUser.correlation[id][suggestion.category])
                    //| Mixin Coeficient: #{coeficient}
                else
                    - coeficient = defaultCoeficient;
                    //| #{coeficient}
            else if (!friendsOnly /*&& ownUser._id != id*/)
                - coeficient = defaultCoeficient;
                //| #{coeficient}
            else
                //| #{coeficient}
            //| #{rating}
            - rating += coeficient*suggestion.userRating[id]
            - sum += coeficient;
    -}
    if (sum != defaultCoeficient)
        - var result = Number((rating)/(sum)).toFixed(2)
        td(data-order= result )
            //p #{sum}
            //p #{rating}
            input(type="hidden", value=suggestion)
            +RatingToColor(result)
        //| #{}
    else
        td(data-sort= "#")
            | #
    //p rating: #{rating}
    //p Sum: #{sum}